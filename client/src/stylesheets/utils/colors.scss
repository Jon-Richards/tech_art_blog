/**
 * Generates a lightness scale of a given color.
 * @param $name {string} - The name of the color.
 * @param $color - The base value of the color.
 * @return A lightness scale of the given color from 10 - 90.
 */
@mixin generate-swatch($name, $color) {
  @for $i from 1 through 9 {
    $iteration: $i * 10;
    $clamp-value: 50;
    @if $i < 5 {
      $result: darken($color, $clamp-value - $iteration);
      --color-#{$name}-#{$iteration}: #{$result};
      @include _generate-swatch-alphas($name, $iteration, $result);
    }
    @if $i == 5 {
      --color-#{$name}-#{$iteration}: #{$color};
    }
    @if $i > 5 {
      $result: lighten($color, $iteration - $clamp-value);
      --color-#{$name}-#{$iteration}: #{$result};
      @include _generate-swatch-alphas($name, $iteration, $result);
    }
  }
}

/**
 * Generates a range of alpha values for a given color.
 */
@mixin _generate-swatch-alphas($name, $iteration, $color_value) {
  $increment: 25; // out of 100
  $max-variants: (100 - $increment) / $increment;
  @for $i from 1 through $max-variants {
    $alpha_value: $i * $increment;
    $label: (100 - $alpha_value);
    $alpha_as_percent: $alpha_value * -1%;
    $result: scale-color($color_value, $alpha: $alpha_as_percent);
    --color-#{$name}-#{$iteration}--alpha-#{$label}: #{$result};
  }
}
